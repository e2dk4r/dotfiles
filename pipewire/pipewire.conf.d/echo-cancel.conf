context.modules = [
  # Echo cancellation
  { name = libpipewire-module-echo-cancel
    args = {
      # Monitor mode: Instead of creating a virtual sink into which all
      # applications must play, in PipeWire the echo cancellation module can read
      # the audio that should be cancelled directly from the current fallback
      # audio output
      monitor.mode = true
      # The audio source / microphone wherein the echo should be cancelled is not
      # specified explicitly; the module follows the fallback audio source setting
      source.props = {
        # Name and description of the virtual source where you get the audio
        # without echoed speaker output
        node.name = "source_ec"
        node.description = "Echo-cancelled source"
      }
      aec.args = {
        # Settings for the WebRTC echo cancellation engine
        # see: https://gitlab.freedesktop.org/pipewire/pipewire/-/raw/master/spa/plugins/aec/aec-webrtc.cpp
        #      /webrtc_get_spa_bool\(args,
        #webrtc.gain_control = true
        #webrtc.extended_filter = false
        #webrtc.analog_gain_control = false
        #webrtc.digital_gain_control = true
        #webrtc.experimental_agc = true
        #webrtc.noise_suppression = true
      }
    }
  }
]
